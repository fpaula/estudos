O hudson usa o Xvfb para rodar os testes de selenium nos browsers.
O Xvfb serve para emular um ambiente gráfico nos servidores que não possuem interface gráfica.

arquivo .feature
tag @wip
#rake cucumber:wip (roda só os testes que tem essa tag)

TODO
- criar validação de slug unica
- criar uma action no controller post que retorna a validacao da slug
- validar slug via ajax
- renderizar mensagem de erro via JS
- validar slug unica sem JS




Page Object Model
http://code.google.com/p/selenium/wiki/PageObjects

Ler artigo:
http://aslakhellesoy.com/post/11055981222/the-training-wheels-came-off

CUCUMBER
para ver traducoes: cucumber --i18n pt
usar exemplos é legal
cuidado ao usar background

02/05:  Shared Examples
        Shared Context
        Custom matchers
        
        config.include FactoryGirl::Syntax::Methods (inclui os metodos)
        
        ActiveSupport::Concern
        
module Abc
  module ClassMethods
    def self.metodo1
    end
    
    def self.metodo2
    end
  end
  
  module InstanceMethods
    def metodo1
    end
    
    def metodo2
    end
  end
end

class MinhaClasse
  extend Abc::ClassMethods
  include Abc::InstanceMethods
end


TODO
#fazer um exemplo de expectation error e to change

Exit code (retorno do ultimo processo) $?


Para stubar servicos, usar VCR

MOC: garantir que executa uma coisa com aqueles parametros (expectativas)
  Pode garantir por exemplo quantas vezes chama um metodo, ou se nao chamou, etc
  Geralmente usado com interações externas. Ex: escrita em disco (garantir que escreveu o arquivo só uma vez)
  FakeFS (moca escrita em disco)


STUB: garantir chamada e retorno
  É usado com mais frequencia do que MOC.
  Em sistemas grandes, para iteração com classes que geram muito processamento (calculo por exemplo)
  Pesar se vale a pena usar
  O principal uso é em chamadas para servicos externos (apis, etc)